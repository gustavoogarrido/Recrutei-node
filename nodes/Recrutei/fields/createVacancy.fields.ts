import { INodeProperties } from 'n8n-workflow';

export const createVacancyFields: INodeProperties[] = [
  {
    displayName: 'Título Da Vaga',
    name: 'title',
    type: 'string',
    required: true,
    default: '',
    description: 'Título da vaga. Exemplo: "Desenvolvedor Front-end".',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Descrição Da Vaga',
    name: 'description',
    type: 'string',
    typeOptions: { alwaysOpenEditWindow: true },
    required: true,
    default: '',
    description: 'Descrição da vaga em HTML/CSS simples. Exemplo: <p><h4>Responsabilidades:</h4><ul><li>Desenvolver aplicações...</li></ul></p>.',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'ID Do Departamento',
    name: 'company_department_id',
    type: 'number',
    required: true,
    default: 0,
    description: 'Define qual será o departamento interno da empresa que será associado à vaga. A lista de departamentos pode ser obtida através do endpoint "Listando departamentos".',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'ID Do Regime De Trabalho',
    name: 'regime_id',
    type: 'number',
    required: true,
    default: 0,
    description: 'Define qual será o regime associado à vaga. A lista de regimes possíveis pode ser obtida através do endpoint "Listando regimes".',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Quantidade De Vagas',
    name: 'quantity',
    type: 'number',
    required: true,
    default: 1,
    description: 'Define a quantidade de posições que a vaga terá. Exemplo: 5.',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Carga Horária Semanal',
    name: 'workload',
    type: 'string',
    required: true,
    default: '40 horas',
    description: 'Define qual será a carga horária semanal esperada para a vaga. Exemplo: "40 horas". Para vagas PJ sem carga definida, envie apenas: "0".',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'ID Do Fluxo (Pipe)',
    name: 'pipe_id',
    type: 'number',
    required: true,
    default: 0,
    description: 'ID do fluxo/kanban que a vaga utilizará. Use o endpoint "Listando fluxos (pipes)" para obter os IDs disponíveis.',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Modalidade De Trabalho',
    name: 'remote',
    type: 'options',
    options: [
      { name: '100% Presencial', value: 0 },
      { name: '100% Remoto', value: 1 },
      { name: 'Presencial Ou Remoto', value: 2 },
      { name: 'Híbrido (Presencial E Remoto)', value: 3 },
    ],
    required: true,
    default: 0,
    description: 'Define se a vaga será presencial, remota, híbrida ou aceita ambas as modalidades',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Tipo De Vaga',
    name: 'type',
    type: 'options',
    options: [
      { name: 'Confidencial', value: 'Confidencial' },
      { name: 'Pública', value: 'Pública' },
    ],
    required: true,
    default: 'Pública',
    description: 'Vagas confidenciais têm acesso apenas via URL direta. Vagas públicas aparecem na página de carreiras e são enviadas às jobboards.',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Tipo De Remuneração',
    name: 'fixed_remuneration',
    type: 'options',
    options: [
      { name: 'Faixa Salarial', value: 0 },
      { name: 'Valor Fixo', value: 1 },
    ],
    required: true,
    default: 0,
    description: 'Define se a remuneração é fixa ou uma faixa. 1 = Para remuneração fixa e direta (ex: R$ 3.000). 0 = Para remuneração em faixa (ex: "de R$3.000 até R$4.000")',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Valor Da Remuneração',
    name: 'remuneration',
    type: 'number',
    default: 0,
    description: 'Informa qual será a remuneração da vaga. Este campo deve ser usado apenas quando fixed_remuneration = 1. Deve ser enviado no formato: 1500.00 ou 1500',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Remuneração Mínima',
    name: 'remuneration_from',
    type: 'number',
    default: 0,
    description: 'Informa qual será o início da faixa de remuneração da vaga. Deve ser usado apenas quando fixed_remuneration = 0. Deve ser enviado no formato: 2000.00 ou 2000',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Remuneração Máxima',
    name: 'remuneration_to',
    type: 'number',
    default: 0,
    description: 'Informa qual será o fim da faixa de remuneração da vaga. Deve ser usado apenas quando fixed_remuneration = 0. Deve ser enviado no formato: 3000.00 ou 3000',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Período Da Remuneração',
    name: 'remuneration_type',
    type: 'options',
    options: [
      { name: 'Por Hora', value: 'Hora' },
      { name: 'Por Mês', value: 'Mês' },
      { name: 'Por Ano', value: 'Ano' },
    ],
    default: 'Mês',
    description: 'Define qual será o tipo de remuneração: por hora, por mês, ou por ano. Exemplo: "Mês". Usado para formatar a remuneração, ex: "R$ 3000.00 por mês" ou "R$ 50 por hora"',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Data De Expiração',
    name: 'expired_at',
    type: 'dateTime',
    default: '',
    description: 'Define a data de expiração da vaga. A partir desta data, a vaga não estará mais disponível para receber novas candidaturas. Exemplo: 2025-07-20',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'ID Do Cliente',
    name: 'client_id',
    type: 'number',
    default: null,
    description: 'Define qual será o cliente que deverá ser associado à vaga, caso exista. A lista de clientes pode ser obtida através do endpoint "Listando clientes".',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'ID Do Motivo Da Requisição',
    name: 'request_reason_id',
    type: 'number',
    default: 0,
    description: 'Define qual será o motivo de requisição associado à vaga. A lista de motivos possíveis pode ser obtida através do endpoint "Listando motivos de requisição".',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Cidade',
    name: 'city',
    type: 'string',
    default: '',
    description: 'Define a cidade da vaga. Poderá ser NULL caso não tenha cidade definida, numa vaga remota, por exemplo. Exemplo: "Uberlândia"',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Estado (UF)',
    name: 'state',
    type: 'string',
    default: '',
    description: 'Define o estado da vaga, em UF. Poderá ser NULL caso não tenha estado definido, numa vaga remota, por exemplo. Exemplo: "MG"',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'País',
    name: 'country',
    type: 'string',
    default: '',
    description: 'Define o país da vaga. Poderá ser NULL caso não tenha país definido, numa vaga remota, por exemplo. Exemplo: "Brasil"',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Habilidades Necessárias',
    name: 'skills',
    type: 'string',
    default: '',
    description: 'Define a lista de habilidades necessárias para a vaga, separadas por vírgula. Exemplo: "Javascript, NodeJS, ReactJS, HTML, CSS".',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Benefícios Oferecidos',
    name: 'benefits',
    type: 'string',
    default: '',
    description: 'Define a lista de benefícios associados na vaga, separados por vírgula. Exemplo: "Plano de Saúde, Vale Alimentação".',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Código Interno',
    name: 'internal_code',
    type: 'string',
    default: '',
    description: 'Código interno da vaga para controle da empresa (opcional)',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Data Prevista Para Contratação',
    name: 'time_to_hire',
    type: 'dateTime',
    default: '',
    description: 'Data prevista para preenchimento da vaga (SLA interno). Esta data não é compartilhada com os candidatos.',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'IDs Dos Recrutadores',
    name: 'managers',
    type: 'string',
    default: '',
    description: 'Define qual será a equipe que será responsável pela vaga. Devem ser enviados os IDs dos managers (recrutadores) separados por vírgulas. A lista de managers pode ser obtida através do endpoint "Listando Managers". Exemplo: 1994, 2174, 2155',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Informações Internas',
    name: 'internal_information',
    type: 'string',
    typeOptions: { alwaysOpenEditWindow: true },
    default: '',
    description: 'Permite incluir uma observação interna qualquer que ficará associada à vaga. Exemplo: "Esta vaga deverá ser trabalhada em...".',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Vaga Externa',
    name: 'external',
    type: 'options',
    options: [
      { name: 'Não', value: 0 },
      { name: 'Sim', value: 1 },
    ],
    required: true,
    default: 0,
    description: 'Define se é uma vaga externa (para cliente) ou interna (da própria empresa)',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Vaga Para PCD',
    name: 'pcd',
    type: 'options',
    options: [
      { name: 'Não', value: 0 },
      { name: 'Sim', value: 1 },
    ],
    default: 0,
    description: 'Define se a oportunidade será inclusiva para pessoas com deficiência (PCD)',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Vaga Inclusiva/Afirmativa',
    name: 'is_inclusive',
    type: 'options',
    options: [
      { name: 'Não', value: 0 },
      { name: 'Sim', value: 1 },
    ],
    default: 0,
    description: 'Define se a vaga é inclusiva/afirmativa para diversidade',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Exibir Cliente',
    name: 'show_client',
    type: 'options',
    options: [
      { name: 'Não', value: 0 },
      { name: 'Sim', value: 1 },
    ],
    required: true,
    default: 0,
    description: 'Define se o cliente associado à vaga deve ser exibido. Caso não exista um cliente associado à vaga, envie apenas 0. Exemplo: 0',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Exibir Remuneração',
    name: 'show_remuneration',
    type: 'options',
    options: [
      { name: 'Não', value: 0 },
      { name: 'Sim', value: 1 },
    ],
    required: true,
    default: 1,
    description: 'Define se a remuneração da vaga (seja ela fixa ou uma faixa de remuneração) poderá ser visível aos candidatos ou não. Caso seja pública, envie 1. Exemplo: 1',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Exibir Localização',
    name: 'show_location',
    type: 'options',
    options: [
      { name: 'Não', value: 0 },
      { name: 'Sim', value: 1 },
    ],
    required: true,
    default: 1,
    description: 'Define se a localização da vaga (seja presencial, remota ou híbrida) poderá ser visível aos candidatos ou não. Caso seja pública, envie 1. Exemplo: 1',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
  {
    displayName: 'Exibir Regime De Trabalho',
    name: 'show_regime',
    type: 'options',
    options: [
      { name: 'Não', value: 0 },
      { name: 'Sim', value: 1 },
    ],
    required: true,
    default: 1,
    description: 'Define se o regime da vaga (CLT, PJ, etc) poderá ser visível aos candidatos ou não. Caso seja público, envie 1. Exemplo: 1',
    displayOptions: { show: { operation: ['createVacancy'] } },
  },
];
